hmLoadTopic({
hmKeywords:"",
hmTitle:"Device type",
hmDescription:"A device type is the scheme that defines the logical and physical structure of HsM device. This includes the components that are used for instances of this device types,...",
hmPrevLink:"rest-api.html",
hmNextLink:"compound-device-types.html",
hmParentLink:"cats.html",
hmBreadCrumbs:"<a href=\"neutral-backend-infrastructure.html\">Neutral backend infrastructure<\/a> &gt; <a href=\"cats.html\">Catalog service<\/a>",
hmTitlePath:"Neutral backend infrastructure > Catalog service > Device type",
hmHeader:"<h1 class=\"p_Heading1\"><span class=\"f_Heading1\">Device type<\/span><\/h1>\n\r",
hmBody:"<p class=\"p_Normal\">A <span class=\"f_Term\">device type<\/span> is the scheme that defines the logical and physical structure of HsM device. This includes the components that are used for instances of this device types, details about the firmware and many more characteristics that allow clients of the Catalog Service to manage and use devices of this type.<\/p>\n\r<p class=\"p_Normal\">which must (or can) be present in instances of this device type and it defines the hierarchical, tree-like structure in which these components are organized. The device type is therefore a specification for all clients of the Catalog Service that <\/p>\n\r<p class=\"p_Normal\">&nbsp;<\/p>\n\r<p class=\"p_Normal\">&nbsp;<\/p>\n\r<p class=\"p_Normal\">This is achieved by specifying a hierarchical structure of component placeholders where each placeholder is typed with a component type and can be further specified with multiple attributes as documented below. The device type is the contract that sets the rules how devices that are instance of this device type must be constructed.<\/p>\n\r<p class=\"p_Normal\">Devices that are instances of a device type must fulfill the contract set by the component type by associating placeholders with instances of component variant versions.<\/p>\n\r<h2 class=\"p_Heading2\"><span class=\"f_Heading2\">Component placeholder hierarchy level<\/span><\/h2>\n\r<p class=\"p_Normal\">As component placeholders are organized in a hierarchical, tree like structure, every component placeholder is on a specific level in this structure. Component placeholders directly linked to the device type root are level 0 component placeholders, children of a level 0 component placeholder are level 1 placeholders and so on.<\/p>\n\r<h2 class=\"p_Heading2\"><span class=\"f_Heading2\">Optional and mandatory component placeholders<\/span><\/h2>\n\r<p class=\"p_Normal\">Each component placeholder is either mandatory or optional. If a component placeholder is optional instances of this device type can but do not have to assign an instance of a component variant version to this placeholder, if it is mandatory instances must assign an instance of a component variant version to this placeholder.<\/p>\n\r<h2 class=\"p_Heading2\"><span class=\"f_Heading2\">Following rules apply to device types:<\/span><\/h2>\n\r<p class=\"p_Normal\">Each device type must consist of at least one mandatory level-0 component placeholder.<\/p>\n\r<p class=\"p_Normal\">Component placeholders that are optional can have mandatory sub-component placeholders. In that case if a device assigns a component variant version to an optional placeholder it must also assign component variant versions to all mandatory subordinate component placeholders.<\/p>\n\r<h2 class=\"p_Heading2\"><span class=\"f_Heading2\">Exchangability<\/span><\/h2>\n\r<p class=\"p_Normal\">Component placeholders are marked with an exchangability attribute. This attribute defines if and how component variant versions assigned to this placehodlder can be exchanged in the life cycle of a device. The exchangeability can of course not be enforced for physical devices, however it is at least a hint for catalog clients how to display and handle components.<\/p>\n\r<p class=\"p_Normal\">Following exchangability attributes are supported:<\/p>\n\r<p class=\"p_Normal\" style=\"text-indent: 0; padding-left: 0.8125rem; margin-left: 0;\"><span class=\"f_Normal\" style=\"font-family: Arial,\'Lucida Sans Unicode\',\'Lucida Grande\',\'Lucida Sans\';display:inline-block;width:0.8125rem;margin-left:-0.8125rem\">&#8226;<\/span>Not-exchangable: If an instance of a component variant version is assigned to a non-exchangable placeholder it is not allowed to change this assignment to another component variant version. If however an optional component placeholder has no assignment to a component variant version yet, an assignement can be created.<\/p><p class=\"p_Normal\" style=\"text-indent: 0; padding-left: 0.8125rem; margin-left: 0;\"><span class=\"f_Normal\" style=\"font-family: Arial,\'Lucida Sans Unicode\',\'Lucida Grande\',\'Lucida Sans\';display:inline-block;width:0.8125rem;margin-left:-0.8125rem\">&#8226;<\/span>Exchangable: If an instance of a component variant version is assigned to an exchangable placeholder it is allowed to change this assignment to another component variant version. If the componet placeholder is optional the assignment can also be deleted, leaving the placeholder unassigned.<\/p><p class=\"p_Normal\" style=\"text-indent: 0; padding-left: 0.8125rem; margin-left: 0;\"><span class=\"f_Normal\" style=\"font-family: Arial,\'Lucida Sans Unicode\',\'Lucida Grande\',\'Lucida Sans\';display:inline-block;width:0.8125rem;margin-left:-0.8125rem\">&#8226;<\/span>Exchangable with sub-components: If an instance of a component variant version is assigned to a component placeholder marked as exchangable with sub-components, it is allowed to change this assignement o ahother component variant version but only if the assignment for all subordinate component placehloders is also changed.<\/p><p class=\"p_Normal\">&nbsp;<\/p>\n\r<p class=\"p_Normal\">Modifying the exchangability attribute<\/p>\n\r<p class=\"p_Normal\">Component placeholder exchangeability attribute can be changed without restrictions.<\/p>\n\r<p class=\"p_Normal\">&nbsp;<\/p>\n\r<p class=\"p_Normal\">Propagation of exchangability<\/p>\n\r<p class=\"p_Normal\">The exchangability attribute set on component placeholders is not propagated in the component placeholder tree, every component placeholde has its own exchangability attribute.<\/p>\n\r"
})
